<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.12.RELEASE</version>
    </parent>
    <groupId>com.extra.light</groupId>
    <artifactId>light</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <modules>
        <module>record</module>
    </modules>

    <dependencies>
        <!--添加starter-web模块的依赖-->
        <!-- springBoot相关依赖，web部分开始-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--api文档-->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <!--使用Swagger2-->
            <artifactId>knife4j-spring-boot-starter</artifactId>
            <version>2.0.9</version>
        </dependency>
        <!--配置文件信息读取用, 以下为官方文档，意思是可以通过@ConfigurationProperties配置，这是在编译项目的时候调用的-->
        <!--You can easily generate your own configuration metadata file from items annotated with @ConfigurationProperties
         by using the spring-boot-configuration-processor jar. The jar includes a Java annotation processor which is invoked
          as your project is compiled. To use the processor, include a dependency on spring-boot-configuration-processor.-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>


    </dependencies>

</project>